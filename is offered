# Write a procedure download_time which takes as inputs a file size, the
# units that file size is given in, bandwidth and the units for
# bandwidth (excluding per second) and returns the time taken to download 
# the file.
# Your answer should be a string in the form
# "<number> hours, <number> minutes, <number> seconds"

# Some information you might find useful is the number of bits
# in kilobits (kb), kilobytes (kB), megabits (Mb), megabytes (MB),
# gigabits (Gb), gigabytes (GB) and terabits (Tb), terabytes (TB).

#print 2 ** 10      # one kilobit, kb
#print 2 ** 10 * 8  # one kilobyte, kB

#print 2 ** 20      # one megabit, Mb
#print 2 ** 20 * 8  # one megabyte, MB

#print 2 ** 30      # one gigabit, Gb
#print 2 ** 30 * 8  # one gigabyte, GB

#print 2 ** 40      # one terabit, Tb
#print 2 ** 40 * 8  # one terabyte, TB

# Often bandwidth is given in megabits (Mb) per second whereas file size 
# is given in megabytes (MB).

def download_time(size,unit,band,unit1):
    a = -1
    b = -1
    number = [ 2**10*8, 2**10, 2**20*8, 2**20, 2**30*8 , 2**30, 2**40*8, 2**40]
    unidad =["kB", "kb", "MB", "Mb","GB","Gb","TB", "Tb"]
    ans = " "
    ans1 = " "
    for m in unidad:
        a = a +1
        b = b + 1
        if m == unit:
            size = size * number[a]
        if m == unit1:
            band = band * number[b]
        result = size /float(band)
    if result > -1:
        hora = int(result /3600)
        if hora == 1:
            ans1 = str(hora) + " hour, "
        else: 
            ans1 = str(hora) + " hours, "
        two = result - (hora *3600)
        minuto = int(two / 60)
        if minuto == 1:
            ans2 = str(minuto) + " minute, "
        else:
            ans2 = str(minuto) + " minutes, "
        three = two - (minuto*60)
        if three == 1:
            ans3 = str(three) + " second"
        else:
            ans3 = str(three) + " seconds"
            ans = ans1 + ans2 + ans3
        if result < 60:
            if result == 1:
                ans = str(0) + " hours, " + str(0) + " minutes, " + str(result) + " second"
            else:
                ans = str(0) + " hours, " + str(0) + " minutes, " + str(result) + " seconds" 
        return ans
    
    
print download_time(11, "GB", 5, "Mb")
# 0 hours, 37 minutes, 32.8 seconds
                
print download_time(1024,'kB', 1, 'MB')
#>>> 0 hours, 0 minutes, 1 second

print download_time(1024,'kB', 1, 'Mb')
#>>> 0 hours, 0 minutes, 8 seconds  # 8.0 seconds is also acceptable

print download_time(13,'GB', 5.6, 'MB')
#>>> 0 hours, 39 minutes, 37.1428571429 seconds

print download_time(13,'GB', 5.6, 'Mb')
#>>> 5 hours, 16 minutes, 57.1428571429 seconds
9
print download_time(10,'MB', 2, 'kB')
#>>> 1 hour, 25 minutes, 20 seconds  # 20.0 seconds is also acceptable

print download_time(10,'MB', 2, 'kb')
#>>> 11 hours, 22 minutes, 40 seconds  # 40.0 seconds is also acceptable

